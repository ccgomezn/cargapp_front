{"version":3,"sources":["components/custom/button/secondary.style.js","components/custom/button/secondary.js","helpers/api/payments.js","containers/Page/signupFinancial.js"],"names":["SecondaryButtonWrapper","styled","div","_templateObject","WithDirection","SecondaryButton","react_default","a","createElement","secondary_style","uielements_button","className","style","this","props","onClick","htmlType","intlMessages","id","message_id","Component","__webpack_require__","d","__webpack_exports__","getPaymentMethods","getActivePaymentMethods","getPaymentMethod","putPaymentMethod","postPaymentMethod","deletePaymentMethod","deleteUserPaymentMethod","getBankAccounts","getActiveBankAccounts","getBankAccount","putBankAccount","postBankAccount","deleteBankAccount","getCargappPayments","getCargappPayment","putCargappPayment","postCargappPayment","deleteCargappPayment","getPayments","getPayment","putPayment","postPayment","deletePayment","_httpRequest__WEBPACK_IMPORTED_MODULE_0__","_http_helper__WEBPACK_IMPORTED_MODULE_1__","get","httpAddr","data","put","post","del","login","authAction","clearMenu","appActions","Option","Select","SignUpFinancial","state","redirectToReferrer","handleLogin","_this$props","_this","history","push","nextProps","isLoggedIn","setState","value","type","Object","_Users_cristhiancamilogomezneira_Documents_proyectos_EvilCorp_cargapp_cargapp_cargapp_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","_this2","axios","all","findParameters","then","responses","payment_methods","account_types","parameters","forEach","parameter","name","banks","bank","generator","_this3","getMineUser","response","postUserPaymentMethod","user_payment_method","payment_method_id","card_number","cvv","expiration","user_id","user","bank_account","account_number","account_type","transformInputData","statu_id","active","_this4","redirect","react__WEBPACK_IMPORTED_MODULE_6___default","react_router_dom__WEBPACK_IMPORTED_MODULE_17__","to","_signupCompany_style__WEBPACK_IMPORTED_MODULE_11__","antd__WEBPACK_IMPORTED_MODULE_14__","antd__WEBPACK_IMPORTED_MODULE_15__","span","class","_components_utility_intlMessages__WEBPACK_IMPORTED_MODULE_10__","_components_custom_input_select__WEBPACK_IMPORTED_MODULE_24__","placeholder","width","onChange","e","handleChange","options","map","item","label_id","_components_custom_input_text__WEBPACK_IMPORTED_MODULE_12__","target","required","align","_components_custom_button_primary__WEBPACK_IMPORTED_MODULE_16__","handlePost","marginTop","react_credit_card_input__WEBPACK_IMPORTED_MODULE_21___default","containerStyle","height","fieldStyle","inputStyle","border","cardNumberInputProps","number","cardExpiryInputProps","cardCVCInputProps","fieldClassName","customTextLabels","invalidCardNumber","expiryError","invalidExpiryDate","monthOutOfRange","yearOutOfRange","dateOutOfRange","invalidCvc","invalidZipCode","cardNumberPlaceholder","expiryPlaceholder","cvcPlaceholder","zipPlaceholder","display","_components_custom_button_secondary__WEBPACK_IMPORTED_MODULE_20__","marginRight","connect","Auth","idToken"],"mappings":"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","file":"static/js/23.cebeb319.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport WithDirection from '../../../settings/withDirection';\n\n\n\nconst SecondaryButtonWrapper = styled.div`\n.secondary {\n         width: 130px;\n          height: 45px !important;\n          border-radius: 2px !important;\n          border: solid 1.2px #0068ff !important;\n          background-color: white !important;\n          font-family: Roboto !important;\n          font-size: 14px !important;\n          font-weight: 500 !important;\n          font-style: normal !important;\n          font-stretch: normal !important;\n          line-height: normal !important;\n          letter-spacing: -0.35px !important;\n          color: #0068ff !important;\n        }\n`;\n\nexport default WithDirection(SecondaryButtonWrapper);","import Button from \"../../uielements/button\";\nimport React, { Component } from \"react\";\nimport IntlMessages from \"../../utility/intlMessages\";\nimport SecondaryButtonWrapper from './secondary.style'\n\nexport default class SecondaryButton extends Component {\n  render() {\n    return (\n      <SecondaryButtonWrapper>\n        <Button className=\"secondary\" style={this.props.style} onClick={this.props.onClick} htmlType={this.props.htmlType}>\n          <IntlMessages id={this.props.message_id} />\n\n        </Button>\n      </SecondaryButtonWrapper>\n    )\n\n  }\n\n}","import {del, get, post, put} from \"../httpRequest\";\nimport {httpAddr} from \"../http_helper\";\n\nexport function getMineBankAccount() {\n    return get(httpAddr + '/bank_account/me', true)\n\n}\n\nexport function getPaymentMethods() {\n    return get(httpAddr + `/payment_methods/`, true);\n}\n\nexport function getActivePaymentMethods() {\n    return get(httpAddr + `/payment_methods/active`, true);\n}\n\nexport function getPaymentMethod(id) {\n    return get(httpAddr + `/payment_methods/` + id, true);\n}\n\nexport function putPaymentMethod(id, data) {\n    return put(httpAddr + '/payment_methods/' + id, data, true);\n}\n\nexport function postPaymentMethod(data) {\n    return post(httpAddr + `/payment_methods`, data, true);\n}\n\nexport function deletePaymentMethod(id) {\n    return del(httpAddr + `/payment_methods/` + id, true)\n}\n\nexport function deleteUserPaymentMethod(id) {\n    return del(httpAddr + `/user_payment_methods/` + id, true)\n}\n\nexport function getBankAccounts() {\n    return get(httpAddr + `/bank_accounts/`, true);\n}\n\nexport function getActiveBankAccounts() {\n    return get(httpAddr + `/bank_accounts/active`, true);\n}\n\nexport function getBankAccount(id) {\n    return get(httpAddr + `/bank_accounts/` + id, true);\n}\n\nexport function putBankAccount(id, data) {\n    return put(httpAddr + '/bank_accounts/' + id, data, true);\n}\n\nexport function postBankAccount(data) {\n    return post(httpAddr + `/bank_accounts`, data, true);\n}\n\nexport function deleteBankAccount(id) {\n    return del(httpAddr + `/bank_accounts/` + id, true)\n}\n\nexport function getCargappPayments() {\n    return get(httpAddr + `/cargapp_payments/`, true);\n}\n\nexport function getActiveCargappPayments() {\n    return get(httpAddr + `/cargapp_payments/active`, true);\n}\n\nexport function getCargappPayment(id) {\n    return get(httpAddr + `/cargapp_payments/` + id, true);\n}\n\nexport function putCargappPayment(id, data) {\n    return put(httpAddr + '/cargapp_payments/' + id, data, true);\n}\n\nexport function postCargappPayment(data) {\n    return post(httpAddr + `/cargapp_payments`, data, true);\n}\n\nexport function deleteCargappPayment(id) {\n    return del(httpAddr + `/cargapp_payments/` + id, true)\n}\n\nexport function getPayments() {\n    return get(httpAddr + `/payments/`, true);\n}\n\nexport function getActivePayments() {\n    return get(httpAddr + `/payments/active`, true);\n}\n\nexport function getPayment(id) {\n    return get(httpAddr + `/payments/` + id, true);\n}\n\nexport function putPayment(id, data) {\n    return put(httpAddr + '/payments/' + id, data, true);\n}\n\nexport function postPayment(data) {\n    return post(httpAddr + `/payments`, data, true);\n}\n\nexport function deletePayment(id) {\n    return del(httpAddr + `/payments/` + id, true)\n}\n","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport authAction from \"../../redux/auth/actions\";\nimport appActions from \"../../redux/app/actions\";\nimport IntlMessages from \"../../components/utility/intlMessages\";\nimport SignUpStyleWrapper from \"./signupCompany.style\";\nimport TextInputCustom from \"../../components/custom/input/text\"\nimport {Row, Col, Select} from \"antd\";\nimport PrimaryButton from '../../components/custom/button/primary'\nimport {Redirect} from \"react-router-dom\";\nimport {getMineUser, postUserPaymentMethod} from \"../../helpers/api/users\";\nimport {getActivePaymentMethods, postBankAccount} from \"../../helpers/api/payments\";\nimport SecondaryButton from \"../../components/custom/button/secondary\";\nimport CreditCardInput from \"react-credit-card-input\";\nimport axios from \"axios\";\nimport {findParameters} from \"../../helpers/api/internals\";\nimport SelectInputCustom from \"../../components/custom/input/select\";\nimport {transformInputData} from \"../../helpers/utility\";\n\nconst {login} = authAction;\nconst {clearMenu} = appActions;\nconst {Option} = Select;\n\nclass SignUpFinancial extends Component {\n    state = {\n        redirectToReferrer: false\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (\n            this.props.isLoggedIn !== nextProps.isLoggedIn &&\n            nextProps.isLoggedIn === true\n        ) {\n            this.setState({redirectToReferrer: true});\n        }\n    }\n\n    handleLogin = () => {\n        const {login, clearMenu} = this.props;\n        login();\n        clearMenu();\n        this.props.history.push(\"/dashboard\");\n    };\n\n    handleChange(value, type) {\n\n        this.setState(\n            {\n                [type]: value\n            }\n        )\n    }\n\n\n    componentDidMount() {\n        axios.all([getActivePaymentMethods(), findParameters('ACCOUNT_TYPE'), findParameters('BANK')])\n            .then((responses) => {\n\n                this.setState({payment_methods: responses[0].data})\n\n                let account_types = [];\n\n                responses[1].data.parameters.forEach(parameter => {\n                    account_types.push(parameter.name)\n                });\n                let banks = [];\n\n                responses[2].data.parameters.forEach(bank => {\n                    banks.push(bank.name)\n                })\n                this.setState({banks: banks, account_types: account_types})\n            })\n    }\n\n    handlePost(generator) {\n\n        getMineUser().then((response) => {\n            if (!generator) {\n                postBankAccount({\n                    bank_account: {\n                        account_number: this.state.account_number,\n                        account_type: transformInputData(this.state.account_type),\n                        bank: transformInputData(this.state.bank),\n                        user_id: response.data.user.id,\n                        statu_id: 15,\n                        active: true\n                    }\n                }).then((response) => {\n                    this.props.history.push('/')\n                })\n            } else {\n                postUserPaymentMethod({\n                    user_payment_method: {\n                        payment_method_id: 2,\n                        card_number: this.state.card_number,\n                        cvv: this.state.cvv,\n                        expiration: this.state.expiration,\n                        user_id: response.data.user.id\n\n                    }\n                }).then((response) => {\n                    this.props.history.push('/')\n                })\n            }\n\n        })\n\n    }\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to={'/'}/>\n        }\n        const {generator} = this.props;\n        return (\n            <SignUpStyleWrapper className=\"isoSignUpPage\">\n                <div className=\"isoSignUpContentWrapper\">\n                    <div className=\"isoSignUpContent\">\n                        <div className=\"isoLogoWrapper\">\n                            <div>\n                                <Row>\n                                    <Col span={24}>\n                                        <div>\n                                            <div class=\"Bienvenido-a-Cargapp\">\n                                                <IntlMessages id=\"page.closer\"/>\n\n                                                <div class=\"text-style-1\">\n                                                    <IntlMessages id=\"page.future\"/>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col span={24}>\n                                        <div class=\"Una-solucin-digital\">\n                                            <IntlMessages id=\"page.relation\"/>\n                                        </div>\n                                    </Col>\n                                </Row>\n\n                            </div>\n\n                        </div>\n\n                        <div className=\"isoLogoWrapper2\">\n                            <hr/>\n\n                            <div>\n                                <Row>\n                                    <Col span={24}>\n                                        <p className=\"title\">\n                                            <IntlMessages id=\"page.financial.title\"/>\n                                        </p>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col span={24}>\n                                        <p className=\"subtitle\">\n                                            <IntlMessages id=\"page.financial.subtitle\"/>\n                                        </p>\n                                    </Col>\n                                </Row>\n                            </div>\n                        </div>\n                        {!generator &&\n                        <div className=\"isoSignUpForm\">\n\n                            <div className=\"isoInputWrapper\">\n\n                                    <SelectInputCustom value={this.state.account_type} placeholder=\"Tipo de cuenta\"\n                                                       style={{width: '100%'}} onChange={(e) => {\n                                        this.handleChange(e, 'account_type')\n                                    }}\n                                                       options={this.state && this.state.account_types &&\n\n                                                       this.state.account_types.map((item) => {\n                                                           return <Option\n                                                               value={item}>{item}</Option>\n                                                       })\n                                                       }\n                                                       label_id={'admin.title.bankAccountType'}>\n\n                                    </SelectInputCustom>\n\n\n\n\n                            </div>\n\n                            <div className=\"isoInputWrapper\">\n                                <TextInputCustom label_id='page.accountNumber' placeholder='Número de cuenta'\n                                                 value={this.state.account_number}\n                                                 onChange={(e) => this.handleChange(e.target.value, 'account_number')}\n                                                 required/>\n\n\n                            </div>\n\n\n                            <div className=\"isoInputWrapper\">\n\n\n                                    <SelectInputCustom value={this.state.bank} placeholder=\"Banco\"\n                                                       style={{width: '100%'}} onChange={(e) => {\n                                        this.handleChange(e, 'bank')\n                                    }}\n                                                       options={this.state && this.state.banks &&\n\n                                                       this.state.banks.map((item) => {\n                                                           return <Option\n                                                               value={item}>{item}</Option>\n                                                       })\n                                                       }\n                                                       label_id={'admin.title.bank'}>\n\n                                    </SelectInputCustom>\n\n\n\n\n\n\n                            </div>\n\n\n                            <div className=\"sign-buttons\">\n                                <Row>\n                                    <Col align={'right'}>\n\n                                        <PrimaryButton message_id=\"page.end\" onClick={() => this.handlePost()}/>\n\n\n                                    </Col>\n                                </Row>\n                            </div>\n                            <div className=\"footer\">\n                                <Row>\n                                    <Col span={24} align={'center'}>\n                                        <IntlMessages id=\"app.footer\"/>\n\n                                    </Col>\n                                </Row>\n\n                            </div>\n\n                        </div>}\n\n                        {generator &&\n                        <div className=\"isoSignUpForm\">\n\n\n                            <Row style={{marginTop: '10px'}}>\n                                <Col span={24}>\n                                    <CreditCardInput\n                                        containerStyle={{width: '100%', height: '40px'}}\n                                        fieldStyle={{height: '40px'}}\n                                        inputStyle={{height: '40px', border: '13px'}}\n                                        cardNumberInputProps={{\n                                            value: this.state.number,\n                                            onChange: (e) => this.handleChange(e.target.value, 'card_number')\n                                        }}\n                                        cardExpiryInputProps={{\n                                            value: this.state.number,\n                                            onChange: (e) => this.handleChange(e.target.value, 'expiration')\n                                        }}\n                                        cardCVCInputProps={{\n                                            value: this.state.number,\n                                            onChange: (e) => this.handleChange(e.target.value, 'cvv')\n                                        }}\n                                        fieldClassName=\"input\"\n                                        customTextLabels={{\n                                            invalidCardNumber: 'El número de la tarjeta es inválido',\n                                            expiryError: {\n                                                invalidExpiryDate: 'La fecha de expiración es inválida',\n                                                monthOutOfRange: 'El mes de expiración debe estar entre 01 y 12',\n                                                yearOutOfRange: 'El año de expiración no puede estar en el pasado',\n                                                dateOutOfRange: 'La fecha de expiración no puede estar en el pasado'\n                                            },\n                                            invalidCvc: 'El código de seguridad es inválido',\n                                            invalidZipCode: 'El código postal es inválido',\n                                            cardNumberPlaceholder: 'Número de tarjeta',\n                                            expiryPlaceholder: 'MM/AA',\n                                            cvcPlaceholder: 'CVV',\n                                            zipPlaceholder: 'C.P.'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n\n\n                            <div className=\"sign-buttons\">\n                                <Row>\n                                    <Col span={24} align={'right'}>\n                                        <div style={{display: 'inline-block'}}>\n                                            <SecondaryButton message_id=\"page.skip\"\n                                                             style={{width: '130px', marginRight: '10px'}}\n                                                             onClick={() => this.props.history.push(\"/\")}/>\n                                        </div>\n                                        <div style={{display: 'inline-block'}}>\n                                            <PrimaryButton message_id=\"page.end\"\n                                                           style={{width: '130px'}}\n                                                           onClick={() => this.handlePost(true)}/>\n\n                                        </div>\n\n\n                                    </Col>\n                                </Row>\n                            </div>\n                            <div className=\"footer\">\n                                <Row>\n                                    <Col span={24} align={'center'}>\n                                        <IntlMessages id=\"app.footer\"/>\n\n                                    </Col>\n                                </Row>\n\n                            </div>\n\n                        </div>}\n\n                    </div>\n                </div>\n            </SignUpStyleWrapper>\n        );\n    }\n}\n\nexport default connect(\n    state => ({\n        isLoggedIn: state.Auth.idToken !== null ? true : false\n    }),\n    {login, clearMenu}\n)(SignUpFinancial);\n"],"sourceRoot":""}